import{_ as t,c as d,o as r,a as o}from"./app.5c7a3dbc.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Encoder Matching Comparison","slug":"encoder-matching-comparison","link":"#encoder-matching-comparison","children":[]}],"relativePath":"api/encoders.md"}'),n={name:"api/encoders.md"},s=o('<p>Encoding affects the required memory also as query time and phonetic matches. Try to choose the most upper of these encoders which fits your needs, or pass in a <a href="#flexsearch.encoder">custom encoder</a>:</p><table><thead><tr><th>Option</th><th>Description</th><th>False-Positives</th><th>Compression</th></tr></thead><tbody><tr><td><strong>false</strong></td><td>Turn off encoding</td><td>no</td><td>0%</td></tr><tr><td><strong>&quot;default&quot;</strong></td><td>Case in-sensitive encoding</td><td>no</td><td>0%</td></tr><tr><td><strong>&quot;simple&quot;</strong></td><td>Case in-sensitive encoding <br>Charset normalizations</td><td>no</td><td>~ 3%</td></tr><tr><td><strong>&quot;balance&quot;</strong></td><td>Case in-sensitive encoding <br>Charset normalizations <br>Literal transformations</td><td>no</td><td>~ 30%</td></tr><tr><td><strong>&quot;advanced&quot;</strong></td><td>Case in-sensitive encoding <br>Charset normalizations <br>Literal transformations <br>Phonetic normalizations</td><td>no</td><td>~ 40%</td></tr><tr><td><strong>&quot;extra&quot;</strong></td><td>Case in-sensitive encoding <br>Charset normalizations <br>Literal transformations <br>Phonetic normalizations <br>Soundex transformations</td><td>yes</td><td>~ 65%</td></tr><tr><td><strong>function()</strong></td><td>Pass custom encoding via <em>function(string):[words]</em></td><td></td><td></td></tr></tbody></table><h2 id="encoder-matching-comparison" tabindex="-1">Encoder Matching Comparison <a class="header-anchor" href="#encoder-matching-comparison" aria-hidden="true">#</a></h2><blockquote><p>Reference String: <strong>&quot;Bj\xF6rn-Phillipp Mayer&quot;</strong></p></blockquote><table><thead><tr><th>Query</th><th>default</th><th>simple</th><th>advanced</th><th>extra</th></tr></thead><tbody><tr><td>bj\xF6rn</td><td><strong>yes</strong></td><td><strong>yes</strong></td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>bj\xF6r</td><td><strong>yes</strong></td><td><strong>yes</strong></td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>bjorn</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>bjoern</td><td>no</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>philipp</td><td>no</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>filip</td><td>no</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>bj\xF6rnphillip</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>meier</td><td>no</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>bj\xF6rn meier</td><td>no</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>meier fhilip</td><td>no</td><td>no</td><td><strong>yes</strong></td><td><strong>yes</strong></td></tr><tr><td>byorn mair</td><td>no</td><td>no</td><td>no</td><td><strong>yes</strong></td></tr><tr><td><em>(false positives)</em></td><td><strong>no</strong></td><td><strong>no</strong></td><td><strong>no</strong></td><td>yes</td></tr></tbody></table>',5),e=[s];function a(i,g,c,h,l,m){return r(),d("div",null,e)}const u=t(n,[["render",a]]);export{y as __pageData,u as default};
